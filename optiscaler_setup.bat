@echo off
setlocal EnableExtensions EnableDelayedExpansion

:: ============================================================
:: OptiScaler Windows Setup - fetch latest release and install
:: Usage: run this in the TARGET GAME DIRECTORY you want to install into.
:: Requires: PowerShell (Windows 10/11 include it by default)
:: ============================================================

set "REPO=optiscaler/OptiScaler"
set "GAME_DIR=%CD%"
echo [optiscaler] Target directory: "%GAME_DIR%"

where powershell >nul 2>&1
if errorlevel 1 (
  echo [error] PowerShell not found on PATH. Please install it and retry.
  exit /b 1
)

:: Warn if risky dirs
if /I "%GAME_DIR%"=="%USERPROFILE%" echo [warn] You are at your home directory. Are you sure?
if /I "%GAME_DIR%"=="C:\" echo [warn] Installing into the root of C:\ is not recommended.

:: Get latest tag + asset URL
echo [optiscaler] Resolving latest release from GitHub: %REPO%
for /f "usebackq tokens=1* delims=" %%A in (`powershell -NoProfile -Command ^
  "$repo='%REPO%';" ^
  "$rel=Invoke-RestMethod -Uri \"https://api.github.com/repos/$repo/releases/latest\";" ^
  "$tag=$rel.tag_name;" ^
  "$asset=$rel.assets | Where-Object { $_.browser_download_url -match '\.zip$' -and $_.name -match 'optiscaler' } | Select-Object -First 1;" ^
  "if(-not $asset){ $asset=$rel.assets | Where-Object { $_.browser_download_url -match '\.zip$' } | Select-Object -First 1 }" ^
  "Write-Output $tag; Write-Output $($asset.browser_download_url);"`) do (
  if not defined TAG (
    set "TAG=%%A"
  ) else if not defined ASSET_URL (
    set "ASSET_URL=%%A"
  )
)

if not defined ASSET_URL (
  echo [error] Could not find a downloadable .zip asset.
  echo Visit: https://github.com/%REPO%/releases
  exit /b 1
)

echo [optiscaler] Latest tag: %TAG%
echo [optiscaler] Asset: %ASSET_URL%

:: Download
set "TMPZIP=%TEMP%\OptiScaler-%TAG%.zip"
echo [optiscaler] Downloading to: "%TMPZIP%"
powershell -NoProfile -Command "Invoke-WebRequest -Uri '%ASSET_URL%' -OutFile '%TMPZIP%' -UseBasicParsing"
if errorlevel 1 (
  echo [error] Download failed.
  exit /b 1
)

for /f "tokens=1 delims= " %%H in ('powershell -NoProfile -Command "(Get-FileHash -Algorithm SHA256 '%TMPZIP%').Hash"') do set "SHA256=%%H"
echo [optiscaler] sha256: %SHA256%

:: Warn if files exist
set "_overwrite_ok=1"
for %%F in (nvngx.ini OptiScaler.ini dxgi.dll nvngx.dll OptiScaler.dll OptiScaler.asi) do (
  if exist "%%F" set "_overwrite_ok=0"
)
if "%_overwrite_ok%"=="0" (
  echo [warn] Existing OptiScaler-related files found.
  set /p _ans="Overwrite existing files? [y/N]: "
  if /I not "!_ans!"=="y" if /I not "!_ans!"=="yes" (
    echo [error] Aborting to prevent overwriting.
    exit /b 1
  )
)

:: Extract
echo [optiscaler] Extracting into "%GAME_DIR%"
powershell -NoProfile -Command "Expand-Archive -LiteralPath '%TMPZIP%' -DestinationPath '%CD%' -Force"

:: Proxy DLL alias
set "PRIMARY="
for %%C in (nvngx.dll OptiScaler.dll OptiScaler.asi) do (
  if exist "%%C" if not defined PRIMARY set "PRIMARY=%%C"
)
echo.
echo [optiscaler] Proxy DLL alias?
echo   1) dxgi.dll
echo   2) winmm.dll
echo   3) version.dll
echo   4) none
set /p CHOICE="Choose [1-4]: "
if not defined CHOICE set "CHOICE=1"
if defined PRIMARY (
  if "%CHOICE%"=="1" copy /Y "%PRIMARY%" "dxgi.dll" >nul
  if "%CHOICE%"=="2" copy /Y "%PRIMARY%" "winmm.dll" >nul
  if "%CHOICE%"=="3" copy /Y "%PRIMARY%" "version.dll" >nul
)

:: Create nvngx.ini
if not exist "nvngx.ini" (
  >"nvngx.ini" echo [General]
  >>"nvngx.ini" echo OverlayMenu=true
  >>"nvngx.ini" echo PreferredUpscaler=Auto
  >>"nvngx.ini" echo LogLevel=Info
  >>"nvngx.ini" echo [Keys]
  >>"nvngx.ini" echo MenuKey=INSERT
)

:: dxvk.conf spoof
set /p MAKECONF="Create dxvk.conf for GPU spoofing (FSR4)? [y/N]: "
if /I "%MAKECONF%"=="y" goto :make_dxvk
if /I "%MAKECONF%"=="yes" goto :make_dxvk
goto :done_dxvk

:make_dxvk
echo   1) RX 7900 XTX  (0x1002 / 0x744C)
echo   2) RX 7800 XT   (0x1002 / 0x747F)
echo   3) RX 7700 XT   (0x1002 / 0x7480)
echo   4) custom IDs
echo   5) no spoof
set /p PICK="Choose [1-5]: "
if "%PICK%"=="1" set VENDOR=0x1002 & set DEVICE=0x744C
if "%PICK%"=="2" set VENDOR=0x1002 & set DEVICE=0x747F
if "%PICK%"=="3" set VENDOR=0x1002 & set DEVICE=0x7480
if "%PICK%"=="4" (
  set /p VENDOR="Vendor ID: "
  set /p DEVICE="Device ID: "
)
> "dxvk.conf" echo # dxvk.conf generated by OptiScaler setup
if defined VENDOR if defined DEVICE (
  >>"dxvk.conf" echo dxgi.customVendorId = %VENDOR%
  >>"dxvk.conf" echo dxgi.customDeviceId = %DEVICE%
)

:done_dxvk

:: Uninstaller
(
  echo @echo off
  echo for %%%%F in (dxgi.dll winmm.dll version.dll nvngx.dll OptiScaler.dll OptiScaler.asi nvngx.ini OptiScaler.ini) do if exist "%%%%F" del /f /q "%%%%F"
)> "remove_optiscaler.bat"

echo [optiscaler] Done.
pause
